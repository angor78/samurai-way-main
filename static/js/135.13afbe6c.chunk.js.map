{"version":3,"file":"static/js/135.13afbe6c.chunk.js","mappings":"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","sources":["components/Profile/MyPosts/Post/Post.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/MyPosts.module.css?42be","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","hoc/withRouter.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {StarIcon} from \"@chakra-ui/icons\";\r\nimport {Badge, Box, Image} from \"@chakra-ui/react\";\r\nimport {PostType} from \"../../../../redux/storeTypes\";\r\n\r\n\r\nfunction Post(props: PostType) {\r\n\r\n  const property = {\r\n    date: 3,\r\n    time: 223,\r\n    title: 'Something title post',\r\n    message: props.message,\r\n    likes: props.likeCount,\r\n    reviewCount: 34,\r\n    rating: 4,\r\n    photo: props.photo\r\n  }\r\n\r\n  return (\r\n    <Box margin={3} borderWidth='1px' borderRadius='lg' overflow={'hidden'} padding={'5'} >\r\n      <Box p='6'>\r\n        <Box display='flex' alignItems='baseline'>\r\n          <Badge borderRadius='full' px='2' colorScheme='teal'>\r\n            New\r\n          </Badge>\r\n          <Box\r\n            color='gray.500'\r\n            fontWeight='semibold'\r\n            letterSpacing='wide'\r\n            fontSize='xs'\r\n            textTransform='uppercase'\r\n            ml='2'\r\n          >\r\n            {property.date} day ago &bull; {property.time} time\r\n          </Box>\r\n\r\n        </Box>\r\n        <Box p={'10px'} textAlign={'left'}>\r\n          <Image align={'center'} src={property.photo} boxSize='100%'/>\r\n        </Box>\r\n\r\n        <Box\r\n          mt='1'\r\n          fontWeight='semibold'\r\n          as='h4'\r\n          lineHeight='tight'\r\n          noOfLines={1}\r\n        >\r\n          {property.title}\r\n        </Box>\r\n        <Box>\r\n          {property.message}\r\n          <Box as='span' color='gray.600' fontSize='sm'>\r\n          </Box>\r\n        </Box>\r\n        <Box display='flex' mt='2' alignItems='center'>\r\n          {Array(5)\r\n            .fill('')\r\n            .map((_, i) => (\r\n              <StarIcon\r\n                key={i}\r\n                color={i < property.rating ? 'teal.500' : 'gray.300'}\r\n              />\r\n            ))}\r\n          <Box as='span' ml='2' color='gray.600' fontSize='sm'>\r\n            {property.likes} likes\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyPosts_content__BOegi\",\"posts\":\"MyPosts_posts__cKfQO\",\"post\":\"MyPosts_post__0IXCs\"};","import React from \"react\";\r\nimport Post from \"./Post/Post\"\r\nimport s from \"./MyPosts.module.css\"\r\nimport {Center} from \"@chakra-ui/react\";\r\nimport {PostType} from \"../../../redux/storeTypes\";\r\n\r\n\r\ntype MyPostsPropsType = {\r\n  posts: Array<PostType>\r\n}\r\n\r\nconst MyPosts = React.memo((props: MyPostsPropsType) => {\r\n  let postsElements = props.posts.map(p => <span key={p.id}>{\r\n    <Post id={p.id} message={p.message} likeCount={p.likeCount} photo={p.photo}/>\r\n  }</span>)\r\n\r\n\r\n  return (<div className={s.content}>\r\n    <Center display={'flex'} flexWrap={\"wrap\"}>\r\n      {postsElements}\r\n    </Center>\r\n  </div>)\r\n})\r\n\r\nexport default MyPosts","import React from \"react\";\r\nimport \"./Profile.module.css\"\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {Center, Wrap, WrapItem} from \"@chakra-ui/react\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport {ProfilePropsType} from \"./ProfileContainer\";\r\n\r\n\r\nconst Profile = (props: ProfilePropsType) => {\r\n  return (\r\n\r\n      <Wrap spacing='30px' display={\"flex\"} flexWrap={'wrap'}>\r\n        <WrapItem>\r\n          <Center ml={'20px'} mt={'10px'} display={'flex'} flexDirection={'column'}>\r\n            <ProfileInfo profile={props.profilePage.profile}\r\n                         status={props.status}\r\n                         addPost={props.addPost}\r\n                         updateStatus={props.updateStatus}\r\n                         newPostText={props.profilePage.newTextPost}\r\n                         changePost={props.changeTextPost}/>\r\n          </Center>\r\n        </WrapItem>\r\n        <WrapItem minWidth={'350'}\r\n                  width={'70%'}\r\n                  display={\"flex\"}\r\n                  overflow='hidden'>\r\n          <MyPosts posts={props.profilePage.posts}/>\r\n        </WrapItem>\r\n    </Wrap>\r\n\r\n)\r\n\r\n}\r\n\r\nexport default Profile","import \"./Profile.module.css\"\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n  addPost,\r\n  changeTextPost, getStatus, getUserProfile,\r\n  initialProfileStateType, setUserProfile, updateStatus\r\n} from \"../../redux/profile-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {withRouter} from \"../../hoc/withRouter\";\r\nimport {compose} from \"redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\ntype ProfileClassContainerType = ProfilePropsType & {\r\n  router: { params: { userId: string } }\r\n  getUserProfile: (userId: string) => void\r\n  getStatus: (userId: string) => void\r\n  updateStatus: (status: string) => void\r\n}\r\n\r\nclass ProfileClassContainer extends React.Component<ProfileClassContainerType> {\r\n  refreshProfile() {\r\n    let userId = this.props.router.params.userId\r\n    if (!userId) {\r\n      return <Navigate to={'/login'}/>\r\n    } else {\r\n      this.props.getUserProfile(userId)\r\n      this.props.getStatus(userId)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Readonly<ProfileClassContainerType>, prevState: Readonly<{}>, snapshot?: any) {\r\n    if (this.props.router.params.userId !== prevProps.router.params.userId) {\r\n      this.refreshProfile()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n//REACT-REDUX CONNECT\r\ntype MapStatePropsType = {\r\n  profilePage: initialProfileStateType\r\n  status: string\r\n}\r\ntype MapDispatchPropsType = {\r\n  addPost: () => void\r\n  changeTextPost: (text: string) => void\r\n  setUserProfile: (profile: any) => void\r\n  updateStatus: (status: string) => void\r\n}\r\nexport type ProfilePropsType = MapStatePropsType & MapDispatchPropsType\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n  return {\r\n    profilePage: state.profilePage,\r\n    status: state.profilePage.status\r\n  }\r\n}\r\n\r\n// export default withAuthRedirect(connect(mapStateToProps,\r\n//   {addPost, changeTextPost, setUserProfile, getUserProfile})\r\n// (withRouter(ProfileClassContainer)))\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps,\r\n    {addPost, changeTextPost, setUserProfile, getUserProfile, getStatus, updateStatus}),\r\n  withRouter,\r\n  // withAuthRedirect\r\n)(ProfileClassContainer)\r\n","import {useParams} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {ProfilePropsType} from \"../components/Profile/ProfileContainer\";\r\n\r\n\r\nexport function withRouter(Component: any) {\r\n  function ComponentWithRouterProp(props: ProfilePropsType) {\r\n    let params = useParams();\r\n    return (\r\n      <Component\r\n        {...props}\r\n        router={{params}}\r\n      />\r\n    );\r\n  }\r\n\r\n  return ComponentWithRouterProp;\r\n}"],"names":["props","property","date","time","title","message","likes","likeCount","reviewCount","rating","photo","margin","borderWidth","borderRadius","overflow","padding","p","display","alignItems","px","colorScheme","color","fontWeight","letterSpacing","fontSize","textTransform","ml","textAlign","align","src","boxSize","mt","as","lineHeight","noOfLines","Array","fill","map","_","i","React","postsElements","posts","id","className","s","flexWrap","spacing","flexDirection","ProfileInfo","profile","profilePage","status","addPost","updateStatus","newPostText","newTextPost","changePost","changeTextPost","minWidth","width","ProfileClassContainer","userId","this","router","params","to","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","connect","state","setUserProfile","Component","useParams"],"sourceRoot":""}